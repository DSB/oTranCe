<project name="oTranCe" default="build" basedir="./../">

<property name="repodir" value="${basedir}" />
<property name="builddir" value="${basedir}/tests/_ci" />
<property name="logdir" value="${builddir}/logs" />

<target name="clean">
    <delete dir="${builddir}" />
    <delete dir="${logdir}" />
    <mkdir dir="${builddir}" />
    <mkdir dir="${builddir}/api" />
    <mkdir dir="${builddir}/coverage" />
    <mkdir dir="${builddir}/pdepend" />
    <mkdir dir="${logdir}" />
</target>

 <!-- Run unit tests and generate junit.xml and clover.xml -->
 <target name="phpunit">
    <exec dir="${repodir}/tests" executable="phpunit">
        <arg line="-c ${repodir}/tests/phpunit.vm.xml" />
    </exec>
 </target>

<!-- Run Code Sniffer and check coding style -->
 <target name="phpcs">
  <exec executable="phpcs">
   <arg line="--report=checkstyle
              --report-file=${logdir}/checkstyle.xml
              --standard=${repodir}/tests/oTranCe_CodingStandard.xml
              --extensions=php
              --ignore=*/lang.php,*/library/*,*/tests/*
              ./
   "/>
  </exec>
 </target>

  <!-- Generate jdepend.xml and software metrics charts -->
 <target name="pdepend">
    <touch file="${logdir}/jdepend.xml" />
    <exec dir="${repodir}" executable="pdepend">
    <arg line="--jdepend-xml=${logdir}/jdepend.xml
        --ignore=language,Zend,ZendX,work,tests
        --suffix=php
        --jdepend-chart=${builddir}/pdepend/dependencies.svg
        --overview-pyramid=${builddir}/pdepend/overview-pyramid.svg

        ${repodir}" />
  </exec>
 </target>

 <!-- Generate pmd.xml - exclude */Zend/*,*/language/*    -->
 <target name="phpmd">
    <touch file="${builddir}/pdepend/pmd.xml" />
    <exec dir="${repodir}" executable="phpmd">
        <arg line="${repodir}/ xml codesize,unusedcode,design,naming
            --reportfile ${builddir}/logs/pmd.xml
            --suffixes php
            --exclude ${repodir}/application/language/*,
                ${repodir}/library/Zend/*,
                ${repodir}/library/ZendX/*,
                ${repodir}/work/*,${repodir}/tests/*
        "/>
  </exec>
 </target>

 <!-- Generate pmd-cpd.xml -->
 <target name="phpcpd">
  <exec dir="${repodir}" executable="phpcpd">
   <arg value="--log-pmd"/><arg value="${logdir}/pmd-cpd.xml"/>
   <arg value="--names"/><arg value="*.php"/>
   <arg value="--exclude"/><arg value="application/language"/>
   <arg value="--exclude"/><arg value="library/Zend"/>
   <arg value="--exclude"/><arg value="library/ZendX"/>
   <arg value="--exclude"/><arg value="tests"/>
	<arg path="${repodir}"/>
   </exec>
 </target>

<target name="phploc" description="Generate phploc.csv">
  <exec executable="phploc">
   <arg line="--log-csv ${logdir}/phploc.csv ${repodir}
        --exclude ${repodir}/library/Zend
        --exclude ${repodir}/application/language
        --exclude ${repodir}/library/ZendX
        --exclude ${repodir}/tests
   " />
  </exec>
 </target>

 <!-- Generate API documentation -->
 <target name="phpdoc">
  <exec executable="phpdoc">
   <arg line="-d ${repodir}
        -t ${builddir}/api
        -ti 'oTranCe Code Documentation'
        -s
        -i language/,Zend/,ZendX/,*.phtml,tests/,index.php,flag.php,Debug.php,bootstrap.php,work/" />
  </exec>
 </target>

<target name="docblox">
    <exec executable="docblox">
        <arg line="project:run -d ${repodir}
            -t ${builddir}/api
            -i tests/*,library/*,build/*,data/*,docs/*,
            --template zend" />
    </exec>
</target>

</project>
